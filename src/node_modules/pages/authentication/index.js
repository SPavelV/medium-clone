import React, {useState, useEffect, useContext} from 'react';
import { Link, Redirect } from 'react-router-dom';

import useFetch from 'hooks/useFetch';
import useLocalStorage from 'hooks/useLocalStorage';
import { CurrentUserContext } from 'contexts/currentUser';

export const Authentication = (props) => {
  const isLogin = props.match.path === "/login";
  const pageTitle = isLogin ? "Sign In" : "Sign up";
  const descriptionLink = isLogin ? "/register" : "/login";
  const descritpionText = isLogin ? "Need an account?" : "Have an account";
  const apiUrl = isLogin ? "/users/loign" : "/users";
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [username, setUserName] = useState("");
  const [isSuccessfulSubmit, setIsSuccessfulSubmit] = useState(false);
  const [{response, isLoading}, doFetch] = useFetch(apiUrl);
  const [token, setToken] = useLocalStorage("token");
  const [currentUserState, setCurrentUserState] = useContext(CurrentUserContext);

  console.log(currentUserState);

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("data: ", email, password);
    const user = isLogin ? {email, password} : {email, password, username};
    doFetch( {
      method: "post",
      data: {
        user
      }
    })
  }

  useEffect(() => {
    if(!response) {
      return;
    }
    setToken(response.user.token);
    setIsSuccessfulSubmit(true);
    setCurrentUserState(state => ({
      ...state,
      isLoggedIn: true,
      isLoading: false,
      currentUser: response.user
    }))
  }, [response, setToken]);

  if(isSuccessfulSubmit) {
    return <Redirect to="/" />
  }

  return (
    <div className="auth-page">
      <div className="container page">
        <div className="row">
          <div className="col-md-6 offset-md-3 col-xs-12">
            <h1 className="text-xs-center">{pageTitle}</h1>
            <p className="text-xs-center">
              <Link to={descriptionLink}>{descritpionText}</Link>
            </p>

            <form onSubmit={handleSubmit}>
              <fieldset>

                {!isLogin && (
                  <fieldset className="form-group">
                    <input type="text"
                      value={username}
                      onChange={e => setUserName(e.target.value)}
                      className="form-control form-control-lg"
                      placeholder="Username"
                    />
                  </fieldset>
                )}

                <fieldset className="form-group">
                  <input type="email"
                    value={email}
                    onChange={e => setEmail(e.target.value)}
                    className="form-control form-control-lg"
                    placeholder="Email"
                  />
                </fieldset>

                <fieldset className="form-group">
                  <input type="password"
                    onChange={e => setPassword(e.target.value)}
                    className="form-control form-control-lg"
                    value={password}
                    placeholder="Password"
                  />
                </fieldset>

  <button className="btn btn-lg btn-primary pull-xs-right" type="submit" disabled={isLoading}>{pageTitle}</button>
              </fieldset>
            </form>
          </div>
        </div>
      </div>
    </div>
  )
}

export default Authentication;
